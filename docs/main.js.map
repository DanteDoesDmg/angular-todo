{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/board/board.component.ts","./src/app/board/board.component.html","./src/app/category/category.component.ts","./src/app/category/category.component.html","./src/app/task-form/task-form.component.ts","./src/app/task-form/task-form.component.html","./src/app/task.ts","./src/app/task/task.component.ts","./src/app/task/task.component.html","./src/app/utils.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Task } from './task';\n\n//Dane testowe\nconst task1 = new Task({\n  name: 'zadanie 1',\n  description: 'Opis zadania',\n  status: 'inProgress',\n  priority: 'low',\n});\nconst task2 = new Task({\n  name: 'zadanie 2',\n  description: 'Tutaj też opis zadania',\n  status: 'done',\n  priority: 'high',\n});\nconst task3 = new Task({\n  name: 'zadanie 3',\n  description: 'O, a tutaj jest opis zadania',\n  date: '12/09/2020',\n});\nconst task4 = new Task({\n  name: 'zadanie 4',\n  description: 'Nie taki zły ten angular',\n  date: '12/08/2020',\n});\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'angular-todo';\n  taskList = [task1, task2, task3, task4];\n}\n","<app-board [taskList]=\"taskList\"></app-board>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BoardComponent } from './board/board.component';\nimport { CategoryComponent } from './category/category.component';\nimport { TaskComponent } from './task/task.component';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { TaskFormComponent } from './task-form/task-form.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { FormsModule } from '@angular/forms';\nimport { LayoutModule } from '@angular/cdk/layout';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    CategoryComponent,\n    TaskComponent,\n    TaskFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    DragDropModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatButtonToggleModule,\n    LayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Task } from '../task';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskFormComponent } from '../task-form/task-form.component';\nimport { sortTasksByPriorityAndDate } from '../utils';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss'],\n})\nexport class BoardComponent implements OnInit {\n  todoTasks: Array<Task>;\n  inProgressTasks: Array<Task>;\n  doneTasks: Array<Task>;\n  constructor(public dialog: MatDialog) {}\n  @Input() taskList: Array<Task>;\n\n  openTaskDialog() {\n    const dialogRef = this.dialog.open(TaskFormComponent, {\n      data: {\n        name: '',\n        date: '',\n        priority: 'normal',\n        status: 'todo',\n        description: '',\n      },\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        if (result.date !== '') {\n          result.date = result.date.toLocaleDateString().replace(/\\./g, '/');\n        }\n        const newTask = new Task(result);\n        switch (newTask.status) {\n          case 'inProgress':\n            this.inProgressTasks.push(newTask);\n            this.inProgressTasks = sortTasksByPriorityAndDate(\n              this.inProgressTasks\n            );\n            break\n          case 'done':\n            this.doneTasks.push(newTask);\n            this.doneTasks = sortTasksByPriorityAndDate(this.doneTasks);\n            break\n          default:\n            this.todoTasks.push(newTask);\n            this.todoTasks = sortTasksByPriorityAndDate(this.todoTasks);\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.todoTasks = this.taskList.filter((el) => el.status === 'todo');\n    this.inProgressTasks = this.taskList.filter(\n      (el) => el.status === 'inProgress'\n    );\n    this.doneTasks = this.taskList.filter((el) => el.status === 'done');\n  }\n}\n","<div class=\"board\">\n  <app-category type=\"todo\" [taskList]=\"todoTasks\"></app-category>\n  <app-category type=\"inProgress\" [taskList]=\"inProgressTasks\"></app-category>\n  <app-category type=\"done\" [taskList]=\"doneTasks\"></app-category>\n  <button mat-fab (click)=\"openTaskDialog()\">\n    <mat-icon>add</mat-icon>\n  </button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Task, statusString } from '../task';\nimport { sortByDate, sortTasksByPriorityAndDate } from '../utils';\nimport { CdkDragDrop, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss'],\n})\nexport class CategoryComponent implements OnInit {\n  typeStore: Object;\n  listTypes: Array<statusString>;\n  dateSortFlg = false;\n  prioritySortFlg = true;\n  isScreenSmall: boolean;\n  constructor(public breakpointObserver: BreakpointObserver) {\n    this.listTypes = ['todo', 'inProgress', 'done'];\n    this.typeStore = {\n      todo: {\n        title: 'To Do',\n        connectedTypes: this.listTypes.filter((el) => el !== 'todo'),\n      },\n      inProgress: {\n        title: 'In progress',\n        connectedTypes: this.listTypes.filter((el) => el !== 'inProgress'),\n      },\n      done: {\n        title: 'Done :)',\n        connectedTypes: this.listTypes.filter((el) => el !== 'done'),\n      },\n    };\n  }\n  removeTask(task: Task) {\n    this.taskList = this.taskList.filter((el) => el !== task);\n  }\n  dateSort() {\n    if (!this.dateSortFlg) {\n      sortByDate(this.taskList);\n      this.dateSortFlg = true;\n      this.prioritySortFlg = false;\n    }\n  }\n  prioritySort() {\n    if (!this.prioritySortFlg) {\n      sortTasksByPriorityAndDate(this.taskList);\n      this.dateSortFlg = false;\n      this.prioritySortFlg = true;\n    }\n  }\n  drop(event: CdkDragDrop<Task[]>) {\n    if (event.previousContainer === event.container) {\n    } else {\n      const draggedTask = event.previousContainer.data[event.previousIndex];\n      draggedTask['status'] = <statusString>event.container.id;\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n      if (this.dateSortFlg) sortByDate(event.container.data);\n      if (this.prioritySortFlg)\n        sortTasksByPriorityAndDate(event.container.data);\n    }\n  }\n  @Input() taskList: Array<Task>;\n  @Input() type: string;\n  ngOnInit(): void {\n    this.breakpointObserver\n      .observe(['(max-width: 1079px)'])\n      .subscribe((result) => {\n        this.isScreenSmall = result.matches;\n      });\n  }\n}\n","<mat-card class=\"category mat-elevation-z6\">\n  <mat-card-title>\n    <span>{{ typeStore[type].title }}</span>\n  </mat-card-title>\n  <mat-card-actions>\n    <span>\n      Sort by\n    </span>\n    <mat-button-toggle-group>\n      <mat-button-toggle value=\"date\" (click)=\"dateSort()\"\n        >Date</mat-button-toggle\n      >\n      <mat-button-toggle value=\"priority\" (click)=\"prioritySort()\"\n        >Priority</mat-button-toggle\n      >\n    </mat-button-toggle-group>\n  </mat-card-actions>\n  <mat-card-content\n    id=\"{{ type }}\"\n    cdkDropList\n    [cdkDropListConnectedTo]=\"listTypes\"\n    [cdkDropListData]=\"taskList\"\n    (cdkDropListDropped)=\"drop($event)\"\n  >\n    <app-task\n      *ngFor=\"let task of taskList\"\n      [task]=\"task\"\n      (removeTaskEvent)=\"removeTask($event)\"\n      [cdkDragStartDelay]=\"isScreenSmall ? 100 : 10\"\n      cdkDrag\n    ></app-task>\n  </mat-card-content>\n</mat-card>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Task, priorityString, statusString } from '../task';\n\n\ninterface statusForSelect {\n  value: statusString;\n  display: string;\n}\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n})\nexport class TaskFormComponent implements OnInit {\n  priorities: Array<priorityString>;\n  statuses: Array<statusForSelect>;\n  editedTask: Task;\n\n  constructor(\n    public dialogRef: MatDialogRef<TaskFormComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Task,\n  ) {\n    this.priorities = ['low', 'normal', 'high'];\n    this.statuses = [\n      {\n        value: 'todo',\n        display: 'to do',\n      },\n      {\n        value: 'inProgress',\n        display: 'in progress',\n      },\n      {\n        value: 'done',\n        display: 'done',\n      },\n    ];\n    this.editedTask = Object.assign({}, data);\n  }\n\n  ngOnInit(): void {}\n}\n","<mat-card>\n  <mat-card-title>New Task</mat-card-title>\n  <mat-card-actions>\n    <div class=\"button_container\">\n      <button\n        [mat-dialog-close]=\"editedTask\"\n        [disabled]=\"(editedTask.name || '').length === 0\"\n        color=\"primary\"\n        mat-icon-button\n      >\n        <mat-icon>save</mat-icon>\n      </button>\n      <button (click)=\"dialogRef.close()\" color=\"error\" mat-icon-button>\n        <mat-icon>cancel</mat-icon>\n      </button>\n    </div>\n  </mat-card-actions>\n  <mat-card-content>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Task name</mat-label>\n      <input required maxlength=\"20\" matInput [(ngModel)]=\"editedTask.name\" />\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Status</mat-label>\n      <mat-select [(value)]=\"editedTask.status\">\n        <mat-option\n          *ngFor=\"let status of statuses\"\n          value=\"{{ status.value }}\"\n          >{{ status.display }}</mat-option\n        >\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Priority</mat-label>\n      <mat-select [(value)]=\"editedTask.priority\">\n        <mat-option\n          *ngFor=\"let priority of priorities\"\n          value=\"{{ priority }}\"\n          >{{ priority }}</mat-option\n        >\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput [(ngModel)]=\"editedTask.date\" [matDatepicker]=\"picker\" />\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Description</mat-label>\n      <textarea maxlength=\"128\" matInput [(ngModel)]=\"editedTask.description\"></textarea>\n    </mat-form-field>\n  </mat-card-content>\n</mat-card>\n","export type statusString = 'todo' | 'inProgress' | 'done';\nexport type priorityString = 'high' | 'normal' | 'low';\n\nexport interface task {\n  name: string;\n  date?: string;\n  description?: string;\n  status?: statusString;\n  priority?: priorityString;\n}\n\nexport class Task {\n  date: string;\n  description: string;\n  name: string;\n  status: statusString;\n  priority: priorityString;\n\n  constructor(task: task) {\n    this.name = task.name;\n    this.date = task.date || null;\n    this.status = task.status || 'todo';\n    this.priority = task.priority || 'normal';\n    this.description = task.description;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { TaskFormComponent } from '../task-form/task-form.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Task } from '../task';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.scss'],\n})\nexport class TaskComponent implements OnInit {\n  constructor(public dialog: MatDialog) {}\n  @Input() task: Task;\n  @Output() removeTaskEvent = new EventEmitter();\n  ngOnInit(): void {}\n  removeTask() {\n    this.removeTaskEvent.emit(this.task);\n  }\n  openTaskDialog() {\n    const dialogRef = this.dialog.open(TaskFormComponent, {\n      data: this.task,\n    });\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        if (result.date !== '-') {\n          result.date = result.date.toLocaleDateString().replace(/\\./g, '/');\n        }\n        this.task = <Task>result;\n      }\n    });\n  }\n}\n","<mat-card color=\"primary\" class=\"mat-margin-6 priority-{{ task.priority }}\">\n  <mat-card-header>\n    <div class=\"header_buttons\">\n      <mat-icon (click)=\"openTaskDialog()\">edit</mat-icon>\n      <mat-icon color=\"warn\" (click)=\"removeTask()\">delete</mat-icon>\n    </div>\n    <mat-card-title>\n      {{ task.name }}\n    </mat-card-title>\n    <mat-card-subtitle>\n      {{task.date}}\n    </mat-card-subtitle>\n  </mat-card-header>\n  <div class=\"marker\"></div>\n  <mat-card-content>\n      {{task.description}}\n  </mat-card-content>\n</mat-card>\n","import { Task, priorityString } from './task';\n\ntype compareType = Date | number;\nexport function compare(a: compareType, b: compareType) {\n  /**\n   * @summary Funkcja porównująca 2 wartości, używana do sortowania tabel\n   *\n   */\n  if (a > b) return 1;\n  if (b > a) return -1;\n\n  return 0;\n}\n\nexport function comparePriorities(a: priorityString, b: priorityString) {\n  /**\n   * @summary funkcja porównująca priorytety, używana przy sortowaniu tabel obiektów Task\n   */\n  switch (a) {\n    case 'high':\n      if (b !== 'high') {\n        return -1;\n      }\n      return 0;\n    case 'low':\n      if (b !== 'low') {\n        return 1;\n      }\n      return 0;\n    default:\n      if (b === 'high') {\n        return 1;\n      } else if (b === 'normal') {\n        return 0;\n      }\n      return -1;\n  }\n}\n\nexport function sortTasksByPriorityAndDate(tasks: Array<Task>): Array<Task> {\n  /**\n   * @description funkcja zwraca posortowaną tabelę obiektów Task.\n   *  Sortowanie następuje według:\n   *  1. priorytetu high > normal > low\n   *  2. Daty\n   */\n  tasks = tasks.sort((prev, next) => {\n    if (prev.priority == next.priority) {\n      return compare(new Date(prev.date), new Date(next.date));\n    }\n    return comparePriorities(prev.priority, next.priority);\n  });\n  return tasks;\n}\n\nexport function sortByDate(tasks: Array<Task>) {\n  /**\n   * @summary Funkcja zwraca posortowaną według daty tabelę obiektów Task\n   */\n  return tasks.sort((prev, next) =>\n    compare(new Date(prev.date), new Date(next.date))\n  );\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}